{
  "animations": {},
  "backEndControllerBlobSHADict": {
    "index": "627831e47055bc9446bb7274f354bc958627cbe3#473852397"
  },
  "components": {},
  "controllerBlobSHA": "ef3d9477e50fedf8d224facaee2f0097978d5551#-1799608659",
  "currentPersistingFiles": [
    "src/controllers/components/index.ts",
    "src/public/js/components/Project.Controls.FlowLayout_81bde3d0.tsx",
    "views/home/index.pug"
  ],
  "flows": {
    "default": [
      "<body",
      "    class=\"internal-fsb-disabled-guide\">",
      "<div",
      "    class=\"internal-fsb-begin\"",
      "    internal-fsb-guid=\"0\"",
      "    style=\"height: 100%;\">",
      "<div",
      "    class=\"internal-fsb-absolute-layout internal-fsb-allow-cursor internal-fsb-begin-layout\"",
      "    style=\"height: 100%; min-height: 613px;\"",
      "    internal-fsb-event-no-propagate=\"1\">",
      "<div",
      "    data-title-name=\"MongoDB\"",
      "    class=\"internal-fsb-element\"",
      "    internal-fsb-guid=\"66954cb3\"",
      "    internal-fsb-name=\"DocumentDatabase 1\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentDatabase\"",
      "    style=\"left: 60px; min-height: 552px; top: 61px; width: 806px\">",
      "<div",
      "    class=\"internal-fsb-dragging-handle internal-fsb-title\">MongoDB</div>",
      "<div",
      "    class=\"container-fluid\"",
      "    internal-fsb-event-no-propagate=\"1\">",
      "<div",
      "    class=\"internal-fsb-absolute-layout internal-fsb-allow-cursor row\"",
      "    style=\"inset: 0px; min-height: 402px;; position: absolute\">",
      "<div",
      "    data-title-name=\"User\"",
      "    class=\"internal-fsb-element\"",
      "    internal-fsb-guid=\"e0e320c5\"",
      "    internal-fsb-name=\"DocumentTable 1\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentTable\"",
      "    style=\"left: 325px; top: 167px; width: 150px;\">",
      "<div",
      "    class=\"internal-fsb-dragging-handle internal-fsb-title\">User</div>",
      "<div",
      "    class=\"container-fluid\"",
      "    internal-fsb-event-no-propagate=\"1\">",
      "<div",
      "    class=\"internal-fsb-allow-cursor internal-fsb-strict-layout row\">",
      "<div",
      "    data-title-name=\"id\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"3c32bae0\"",
      "    internal-fsb-name=\"DocumentNotation 1\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\"",
      "    data-column-type=\"primary\">",
      "<div",
      "    class=\"internal-fsb-title\">id</div>",
      "</div>",
      "<div",
      "    data-title-name=\"email\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"9b24b9b4\"",
      "    internal-fsb-name=\"DocumentNotation 2\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\">",
      "<div",
      "    class=\"internal-fsb-title\">email</div>",
      "</div>",
      "<div",
      "    data-title-name=\"password\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"6065bd4a\"",
      "    internal-fsb-name=\"DocumentNotation 3\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\"",
      "    internal-fsb-note=\"A password that was hashed. \">",
      "<div",
      "    class=\"internal-fsb-title\">password</div>",
      "</div>",
      "<div",
      "    data-title-name=\"firstname\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"b0401380\"",
      "    internal-fsb-name=\"DocumentNotation 4\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\">",
      "<div",
      "    class=\"internal-fsb-title\">firstname</div>",
      "</div>",
      "<div",
      "    data-title-name=\"lastname\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"c6e8d64e\"",
      "    internal-fsb-name=\"DocumentNotation 5\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\">",
      "<div",
      "    class=\"internal-fsb-title\">lastname</div>",
      "</div>",
      "<div",
      "    data-title-name=\"profileURL\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"36c3c9be\"",
      "    internal-fsb-name=\"DocumentNotation 8\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\">",
      "<div",
      "    class=\"internal-fsb-title\">profileURL</div>",
      "</div>",
      "<div",
      "    data-title-name=\"createdAt\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"d419d902\"",
      "    internal-fsb-name=\"DocumentNotation 6\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\">",
      "<div",
      "    class=\"internal-fsb-title\">createdAt</div>",
      "</div>",
      "<div",
      "    data-title-name=\"updatedAt\"",
      "    class=\"col-12 internal-fsb-element\"",
      "    internal-fsb-guid=\"b1b17b71\"",
      "    internal-fsb-name=\"DocumentNotation 7\"",
      "    internal-fsb-event-no-propagate=\"1\"",
      "    internal-fsb-class=\"DocumentNotation\">",
      "<div",
      "    class=\"internal-fsb-title\">updatedAt</div>",
      "</div>",
      "</div>",
      "</div>",
      "</div>",
      "</div>",
      "</div>",
      "</div>",
      "</div>",
      "</div>",
      "</body>"
    ],
    "schema": {
      "User": {
        "columns": {
d419d902          "createdAt": {
d419d902            "fieldType": null,
d419d902            "guid": "d419d902",
d419d902            "modifyingPermission": null,
d419d902            "name": "createdAt",
d419d902            "required": false,
d419d902            "retrievingPermission": null,
d419d902            "unique": false,
d419d902            "url": null,
d419d902            "verb": null
d419d902          },
9b24b9b4          "email": {
9b24b9b4            "fieldType": null,
9b24b9b4            "guid": "9b24b9b4",
9b24b9b4            "modifyingPermission": null,
9b24b9b4            "name": "email",
9b24b9b4            "required": false,
9b24b9b4            "retrievingPermission": null,
9b24b9b4            "unique": false,
9b24b9b4            "url": null,
9b24b9b4            "verb": null
9b24b9b4          },
b0401380          "firstname": {
b0401380            "fieldType": null,
b0401380            "guid": "b0401380",
b0401380            "modifyingPermission": null,
b0401380            "name": "firstname",
b0401380            "required": false,
b0401380            "retrievingPermission": null,
b0401380            "unique": false,
b0401380            "url": null,
b0401380            "verb": null
b0401380          },
c6e8d64e          "lastname": {
c6e8d64e            "fieldType": null,
c6e8d64e            "guid": "c6e8d64e",
c6e8d64e            "modifyingPermission": null,
c6e8d64e            "name": "lastname",
c6e8d64e            "required": false,
c6e8d64e            "retrievingPermission": null,
c6e8d64e            "unique": false,
c6e8d64e            "url": null,
c6e8d64e            "verb": null
c6e8d64e          },
6065bd4a          "password": {
6065bd4a            "fieldType": null,
6065bd4a            "guid": "6065bd4a",
6065bd4a            "modifyingPermission": null,
6065bd4a            "name": "password",
6065bd4a            "required": false,
6065bd4a            "retrievingPermission": null,
6065bd4a            "unique": false,
6065bd4a            "url": null,
6065bd4a            "verb": null
6065bd4a          },
36c3c9be          "profileURL": {
36c3c9be            "fieldType": null,
36c3c9be            "guid": "36c3c9be",
36c3c9be            "modifyingPermission": null,
36c3c9be            "name": "profileURL",
36c3c9be            "required": false,
36c3c9be            "retrievingPermission": null,
36c3c9be            "unique": false,
36c3c9be            "url": null,
36c3c9be            "verb": null
36c3c9be          },
b1b17b71          "updatedAt": {
b1b17b71            "fieldType": null,
b1b17b71            "guid": "b1b17b71",
b1b17b71            "modifyingPermission": null,
b1b17b71            "name": "updatedAt",
b1b17b71            "required": false,
b1b17b71            "retrievingPermission": null,
b1b17b71            "unique": false,
b1b17b71            "url": null,
b1b17b71            "verb": null
b1b17b71          }
        },
        "forward": null,
        "group": "User",
        "guid": "e0e320c5",
        "keys": {
3c32bae0          "id": {
3c32bae0            "fieldType": null,
3c32bae0            "guid": "3c32bae0",
3c32bae0            "modifyingPermission": null,
3c32bae0            "name": "id",
3c32bae0            "required": false,
3c32bae0            "retrievingPermission": null,
3c32bae0            "unique": false,
3c32bae0            "url": null,
3c32bae0            "verb": null
3c32bae0          }
        },
        "modifyingPermission": null,
        "relations": {},
        "retrievingPermission": null,
        "source": "document"
      }
    }
  },
  "footerBlobSHA": "9c59c440b43a23c06ed5568e6f45980fa1f8b959#-62004893",
  "frontEndComponentsBlobSHADict": {
    "Project.Controls.FlowLayout_81bde3d0": "06df2df2f51e906d56298926399bd00702f63104#-1702895817"
  },
  "globalSettings": {
    "colorSwatches": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ],
    "components": [],
    "currentActiveLayerHidden": false,
    "currentActiveLayerRemovable": true,
    "currentActiveLayerToolAvailable": true,
    "currentMode": "site",
    "customLocalizedStrings": "",
    "editingAnimationID": null,
    "editingComponentID": null,
    "editingKeyframeID": null,
    "editingPageID": "index",
    "editingPopupID": null,
    "editingProperties": null,
    "editingSelector": null,
    "externalLibraries": "bootstrap@4 react@16",
    "pages": [
      {
        "id": "index",
        "name": "Home",
        "path": "/",
        "state": "create"
      }
    ],
    "popups": [],
    "preview": null
  },
  "headerBlobSHA": "d2be984f02c89156ed3996f9e8a548ee3a4ce901#1493248037",
  "popups": {},
  "properties": {},
  "routeBlobSHA": "e5afd1310d6a1fa94af240cb77c732926748b771#1897328852",
  "services": {},
  "siteBundleBlobSHA": "c424af28e95fc02b57fbf2bdcf45477162724b63#-547786596",
  "sites": {
    "index": {
      "accessories": {},
      "automaticSchemata": {
        "version": "1.1"
      },
      "body": [
        "<body",
        "    class=\"\"",
        "    style=\"\">",
        "<div",
        "    class=\"internal-fsb-begin\"",
        "    internal-fsb-guid=\"0\"",
        "    internal-fsb-animation=\"\">",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-begin-layout internal-fsb-strict-layout\"",
        "    internal-fsb-event-no-propagate=\"1\">",
        "<div",
        "    class=\"col-6 internal-fsb-allow-cursor internal-fsb-element internal-fsb-strict-layout offset-3\"",
        "    internal-fsb-guid=\"81bde3d0\"",
        "    internal-fsb-name=\"FlowLayout 1\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"FlowLayout\"",
        "    style=\"-webkit-border-radius: 3px 3px 3px 3px; border-bottom-color: rgba(0, 43, 255, 1); border-bottom-style: solid; border-bottom-width: 1px; border-left-color: rgba(0, 43, 255, 1); border-left-style: solid; border-left-width: 1px; border-radius: 3px 3px 3px 3px; border-right-color: rgba(0, 43, 255, 1); border-right-style: solid; border-right-width: 1px; border-top-color: rgba(0, 43, 255, 1); border-top-style: solid; border-top-width: 1px; margin-top: 100px; padding-left: 0px; padding-right: 0px\"",
        "    internal-fsb-react-mode=\"Document\"",
        "    internal-fsb-react-code-interface=\"",
        "",
        "// Declare or extend interfaces here:",
        "//",
        "interface IProps extends IAutoBaseProps {",
        "  ",
        "}",
        "interface IState extends IAutoBaseState {",
        "  isLoggingIn: boolean",
        "}",
        "",
        "let DefaultProps = Object.assign({}, DefaultBaseProps, {",
        "  ",
        "});",
        "let DefaultState = Object.assign({}, DefaultBaseState, {",
        "  isLoggingIn: true",
        "});",
        "",
        "\"",
        "    internal-fsb-react-code-body=\"",
        "  ",
        "  // Declare class variables and functions here:",
        "  //",
        "  protected initialize(): void {",
        "    // This is an example of creating a static collection and use in data binding:",
        "    // ",
        "    /* this.state.data = this.state.data || this.props.data || window.data || {};",
        "    const staticCollection: HierarchicalDataTable = {",
        "      source: SourceType.Collection,",
        "      group: 'collection',",
        "      rows: [{",
        "        keys: {...}",
        "        columns: {...}",
        "        relations: {...}",
        "      },",
        "      ...]",
        "    };",
        "    this.state.data['collection'] = staticCollection; */",
        "    //",
        "    // Don't forget to create the mockup's schemata in Explore / Data.",
        "    // ",
        "  }",
        "  ",
        "  protected componentDidMount(): void {",
        "  \tthis.register();",
        "  }",
        "  ",
        "  protected componentWillUnmount(): void {",
        "  }",
        "  ",
        "  protected componentWillReceiveProps(nextProps: any): void {",
        "    // This is an example of creating a dynamic collection and use in data binding:",
        "    // ",
        "    /* this.state.data = this.state.data || this.props.data || window.data || {};",
        "    const dynamicCollection: HierarchicalDataTable = {",
        "      source: SourceType.Collection,",
        "      group: 'collection',",
        "      rows: nextProps.items.map((item) => {",
        "        return {",
        "          keys: {...}",
        "          columns: {...}",
        "          relations: {...}",
        "        };",
        "      })",
        "    };",
        "    this.state.data['collection'] = dynamicCollection; */",
        "    //",
        "    // Don't forget to create the mockup's schemata in Explore / Data.",
        "    // ",
        "  }",
        "  ",
        "  // Providing data array base on dot notation:",
        "  // ",
        "  protected getDataFromNotation(notation: string, inArray: boolean=false, always: boolean=false): any {",
        "    // Redirect the target by overriding the notation value, for example:",
        "    // ",
        "    // notation = `collection[${notation.split(',')[1]}].collection`;",
        "    //",
        "    ",
        "    return super.getDataFromNotation(notation, inArray, always);",
        "  }",
        "  ",
        "  \">",
        "<div",
        "    contenteditable=\"true\"",
        "    class=\"col-12 internal-fsb-element\"",
        "    internal-fsb-guid=\"dc3a5190\"",
        "    internal-fsb-name=\"TextElement 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"TextElement\"",
        "    style=\"color: rgba(0, 43, 255, 1); font-size: 24px; margin-bottom: 10px; margin-top: 10px; text-align: center\">Social Network</div>",
        "<label",
        "    class=\"col-12 internal-fsb-element\"",
        "    internal-fsb-guid=\"c0ee5854\"",
        "    internal-fsb-name=\"Label 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Label\"",
        "    style=\"\">",
        "<div",
        "    class=\"container-fluid\"",
        "    internal-fsb-event-no-propagate=\"1\">",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-strict-layout row\">",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-element internal-fsb-strict-layout\"",
        "    internal-fsb-guid=\"7c8b7819\"",
        "    internal-fsb-name=\"FlowLayout 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"FlowLayout\"",
        "    style=\"padding-left: 0px; padding-right: 0px;\">",
        "<div",
        "    contenteditable=\"true\"",
        "    class=\"col-4 internal-fsb-element offset-0\"",
        "    internal-fsb-guid=\"d07822a9\"",
        "    internal-fsb-name=\"TextElement 3\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"TextElement\"",
        "    style=\"text-align: right\">อีเมล์</div>",
        "<div",
        "    class=\"col-7 internal-fsb-element offset-0\"",
        "    internal-fsb-guid=\"1565c651\"",
        "    internal-fsb-name=\"Email\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    style=\"-fsb-empty\"",
        "    internal-fsb-class=\"Textbox\"",
        "    internal-fsb-data-validation-format=\"email\"",
        "    internal-fsb-data-validation-message=\"กรุณากรอกอีเมล์ให้ถูกต้อง\">",
        "<input",
        "    type=\"text\"",
        "    style=\"-fsb-for-children: true; display: block; width: 100%\"",
        "    class=\"form-control form-control-sm\">",
        "</div>",
        "</div>",
        "</div>",
        "</div>",
        "</label>",
        "<label",
        "    class=\"col-12 internal-fsb-element\"",
        "    internal-fsb-guid=\"86c86c51\"",
        "    internal-fsb-name=\"Label 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Label\"",
        "    style=\"\">",
        "<div",
        "    class=\"container-fluid\"",
        "    internal-fsb-event-no-propagate=\"1\">",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-strict-layout row\">",
        "<div",
        "    class=\"col-12 internal-fsb-allow-cursor internal-fsb-element internal-fsb-strict-layout offset-0\"",
        "    internal-fsb-guid=\"84d2b03b\"",
        "    internal-fsb-name=\"FlowLayout 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"FlowLayout\"",
        "    style=\"padding-left: 0px; padding-right: 0px\">",
        "<div",
        "    contenteditable=\"true\"",
        "    class=\"col-4 internal-fsb-element offset-0\"",
        "    internal-fsb-guid=\"7a8498de\"",
        "    internal-fsb-name=\"TextElement 3\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"TextElement\"",
        "    style=\"text-align: right\">รหัสผ่าน</div>",
        "<div",
        "    class=\"col-7 internal-fsb-element offset-0\"",
        "    internal-fsb-guid=\"53da3716\"",
        "    internal-fsb-name=\"Password\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    style=\"-fsb-empty\"",
        "    internal-fsb-class=\"Textbox\"",
        "    internal-fsb-data-validation-format=\"password\"",
        "    internal-fsb-data-validation-message=\"กรุณากรอกรหัสผ่านให้ถูกต้อง\">",
        "<input",
        "    type=\"text\"",
        "    style=\"-fsb-for-children: true; display: block; width: 100%\"",
        "    class=\"form-control form-control-sm\">",
        "</div>",
        "</div>",
        "</div>",
        "</div>",
        "</label>",
        "<label",
        "    class=\"col-12 internal-fsb-element\"",
        "    internal-fsb-guid=\"7ad4652c\"",
        "    internal-fsb-name=\"Label 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Label\"",
        "    style=\"\"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"!this.state.isLoggingIn\">",
        "<div",
        "    class=\"container-fluid\"",
        "    internal-fsb-event-no-propagate=\"1\">",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-strict-layout row\">",
        "<div",
        "    class=\"col-12 internal-fsb-allow-cursor internal-fsb-element internal-fsb-strict-layout offset-0\"",
        "    internal-fsb-guid=\"3417a2ad\"",
        "    internal-fsb-name=\"FlowLayout 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"FlowLayout\"",
        "    style=\"padding-left: 0px; padding-right: 0px\">",
        "<div",
        "    contenteditable=\"true\"",
        "    class=\"col-4 internal-fsb-element offset-0\"",
        "    internal-fsb-guid=\"38be5754\"",
        "    internal-fsb-name=\"TextElement 3\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"TextElement\"",
        "    style=\"text-align: right\">ยืนยันรหัสผ่าน</div>",
        "<div",
        "    class=\"col-7 internal-fsb-element offset-0\"",
        "    internal-fsb-guid=\"1b97772a\"",
        "    internal-fsb-name=\"Confirm Password\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    style=\"-fsb-empty\"",
        "    internal-fsb-class=\"Textbox\"",
        "    internal-fsb-data-validation-format=\"password\"",
        "    internal-fsb-data-validation-message=\"กรุณากรอกรหัสผ่านให้ตรงกัน\">",
        "<input",
        "    type=\"text\"",
        "    style=\"-fsb-for-children: true; display: block; width: 100%\"",
        "    class=\"form-control form-control-sm\">",
        "</div>",
        "</div>",
        "</div>",
        "</div>",
        "</label>",
        "<button",
        "    type=\"button\"",
        "    class=\"btn btn-primary btn-sm col-6 internal-fsb-allow-cursor internal-fsb-element offset-3\"",
        "    internal-fsb-guid=\"9bc4e00b\"",
        "    internal-fsb-name=\"signup\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Button\"",
        "    style=\"margin-bottom: 10px; margin-top: 5px\"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"!this.state.isLoggingIn\"",
        "    internal-fsb-data-controls=\"1565c651 1b97772a 53da3716\"",
        "    internal-fsb-data-wizard-type=\"navigate\">",
        "<div",
        "    contenteditable=\"true\"",
        "    internal-fsb-class=\"TextElement\"",
        "    internal-fsb-guid=\"9bc4e00b-text\"",
        "    internal-fsb-name=\"TextElement\"",
        "    class=\"internal-fsb-element\"",
        "    internal-fsb-event-no-propagate=\"1\">สมัครสมาชิก</div>",
        "</button>",
        "<button",
        "    type=\"button\"",
        "    class=\"btn btn-primary btn-sm col-6 internal-fsb-allow-cursor internal-fsb-element offset-3\"",
        "    internal-fsb-guid=\"37c296b4\"",
        "    internal-fsb-name=\"signin\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Button\"",
        "    style=\"margin-bottom: 10px; margin-top: 5px\"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"this.state.isLoggingIn\"",
        "    internal-fsb-data-controls=\"1565c651 53da3716\"",
        "    internal-fsb-data-wizard-type=\"navigate\">",
        "<div",
        "    contenteditable=\"true\"",
        "    internal-fsb-class=\"TextElement\"",
        "    internal-fsb-guid=\"ca890b23\"",
        "    internal-fsb-name=\"TextElement\"",
        "    class=\"internal-fsb-element\"",
        "    internal-fsb-event-no-propagate=\"1\">เข้าสู่ระบบ</div>",
        "</button>",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-element\"",
        "    internal-fsb-guid=\"85b46570\"",
        "    internal-fsb-name=\"Rectangle 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Rectangle\"",
        "    style=\"font-size: 14px; padding-left: 30px; padding-right: 30px; width: 100%\">",
        "<div",
        "    contenteditable=\"true\"",
        "    class=\"internal-fsb-element\"",
        "    internal-fsb-guid=\"8138a7c8\"",
        "    internal-fsb-name=\"TextElement 4\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"TextElement\"",
        "    style=\"display: inline-block\"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"!this.state.isLoggingIn\">ยังไม่มีสมาชิก?</div>",
        "<a",
        "    class=\"internal-fsb-allow-cursor internal-fsb-element\"",
        "    internal-fsb-guid=\"b011a65a\"",
        "    internal-fsb-name=\"Link 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Link\"",
        "    style=\"display: inline-block; margin-left: 15px; margin-right: 10px\"",
        "    href=\"javascript:void(0)\"",
        "    onfsbclick=\"{&quot;event&quot;:true}\"",
        "    internal-fsb-react-code-onfsbclick=\"",
        "",
        "    // Handle the event of onLinkClick (Link 2) here:",
        "    // ",
        "    // const target = EventHelper.getCurrentElement(event); /* current invoking element */",
        "    // const element1 = HTMLHelper.getElementById('ID');    /* accessing an element */",
        "    // const control1 = ReactDOM.findDOMNode(this.refs.ID); /* accessing a component */",
        "    // ",
        "    this.setState({isLoggingIn: false});",
        "    ",
        "    \"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"!this.state.isLoggingIn\">",
        "<div",
        "    contenteditable=\"true\"",
        "    internal-fsb-class=\"TextElement\"",
        "    internal-fsb-guid=\"b011a65a-text\"",
        "    internal-fsb-name=\"TextElement\"",
        "    class=\"internal-fsb-element\"",
        "    internal-fsb-event-no-propagate=\"1\">สมัครเลย</div>",
        "</a>",
        "<div",
        "    contenteditable=\"true\"",
        "    class=\"internal-fsb-element\"",
        "    internal-fsb-guid=\"982c997c\"",
        "    internal-fsb-name=\"TextElement 4\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"TextElement\"",
        "    style=\"display: inline-block\"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"this.state.isLoggingIn\">มีสมาชิกอยู่แล้ว?</div>",
        "<a",
        "    class=\"internal-fsb-allow-cursor internal-fsb-element\"",
        "    internal-fsb-guid=\"0cb8b093\"",
        "    internal-fsb-name=\"Link 2\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Link\"",
        "    style=\"display: inline-block; margin-left: 15px; margin-right: 10px\"",
        "    href=\"javascript:void(0)\"",
        "    onfsbclick=\"{&quot;event&quot;:true}\"",
        "    internal-fsb-react-code-onfsbclick=\"",
        "",
        "    // Handle the event of onLinkClick (Link 2) here:",
        "    // ",
        "    // const target = EventHelper.getCurrentElement(event); /* current invoking element */",
        "    // const element1 = HTMLHelper.getElementById('ID');    /* accessing an element */",
        "    // const control1 = ReactDOM.findDOMNode(this.refs.ID); /* accessing a component */",
        "    // ",
        "    this.setState({isLoggingIn: true});",
        "    ",
        "    \"",
        "    internal-fsb-react-display-logic=\"statement\"",
        "    internal-fsb-react-display-statement=\"this.state.isLoggingIn\">",
        "<div",
        "    contenteditable=\"true\"",
        "    internal-fsb-class=\"TextElement\"",
        "    internal-fsb-guid=\"4890b3d6\"",
        "    internal-fsb-name=\"TextElement\"",
        "    class=\"internal-fsb-element\"",
        "    internal-fsb-event-no-propagate=\"1\">เข้าสู่ระบบแทน</div>",
        "</a>",
        "</div>",
        "<label",
        "    class=\"col-12 internal-fsb-element\"",
        "    internal-fsb-guid=\"96a954e4\"",
        "    internal-fsb-name=\"Label 3\"",
        "    internal-fsb-event-no-propagate=\"1\"",
        "    internal-fsb-class=\"Label\">",
        "<div",
        "    class=\"container-fluid\"",
        "    internal-fsb-event-no-propagate=\"1\">",
        "<div",
        "    class=\"internal-fsb-allow-cursor internal-fsb-strict-layout row\">",
        "</div>",
        "</div>",
        "</label>",
        "</div>",
        "</div>",
        "</div>",
        "</body>"
      ],
      "extensions": {
        "internal-fsb-data-code-body": [
          "",
          "  // Declare class variables and functions here:",
          "  //",
          "  protected validate(data: Input[]): void {",
          "  \t// The message of thrown error will be the validation message.",
          "  \t//",
          " \t\tValidationHelper.validate(data);",
          "  }",
          "  ",
          "  // ---------------------------------------------------------------",
          "  // Metadata (SEO)",
          "  // ---------------------------------------------------------------",
          "  ",
          "  protected async accessories(data: Input[]): Promise<any> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        resolve({",
          "          title: null,",
          "          description: null,",
          "          keywords: null,",
          "          language: null,",
          "          contentType: null,",
          "          revisitAfter: null,",
          "          robots: null,",
          "          linkUrl: null,",
          "          imageUrl: null,",
          "          itemType: null,",
          "          contentLocale: null",
          "        });",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  // ---------------------------------------------------------------",
          "  // Example Code of Express Parameters",
          "  // ---------------------------------------------------------------",
          "  // ",
          "  // Access path parameters of \"/path/:a/:b\" using:",
          "  // this.request.params['a'], this.request.params['b']",
          "  // ",
          "  // Access query-string parameters of \"/path/a/b?c=123\" using:",
          "  // this.request.query['c']",
          "  // ",
          "  // Access session variables \"token\" using:",
          "  // this.request.session.token",
          "  // ",
          "  // Saving session variables \"token\" using:",
          "  // this.request.session.token = 'abc';",
          "  // this.request.session.save(() => {",
          "  //   resolve(...);",
          "  // });",
          "  // ---------------------------------------------------------------",
          "",
          "  // ---------------------------------------------------------------",
          "  // Traditional HTTP Request Methods",
          "  // ---------------------------------------------------------------",
          "  ",
          "  protected async get(data: Input[]): Promise<{[Identifier: string]: HierarchicalDataTable}> {",
          "    return new Promise(async (resolve, reject) => {",
          "      /* try {",
          "        resolve(await DatabaseHelper.retrieve(@{",
          "            'collection.column': 'abc',",
          "            'collection.column': 123,",
          "            'collection.collection.column': null",
          "          }, 'collection',",
          "          this.request.session,   // session variables",
          "          false,                  // real-time updates",
          "          false                   // skip permission settings",
          "        ));",
          "      } catch(error) {",
          "        reject(error);",
          "      } */",
          "      try {",
          "        resolve(await super.get(data));",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  protected async post(data: Input[]): Promise<{[Identifier: string]: HierarchicalDataTable}> {",
          "    return new Promise(async (resolve, reject) => {",
          "      /* try {",
          "        resolve(await DatabaseHelper.update(@{",
          "            'collection.column': 'abc',",
          "            'collection.column': 123,",
          "            'collection.collection.column': null",
          "          }, 'collection',",
          "          false,                  // recusive upsert in sub-collection",
          "          this.request.session,   // session variables",
          "          false                   // skip permission settings",
          "        ));",
          "      } catch(error) {",
          "        reject(error);",
          "      } */",
          "      reject(new Error(\"Not Implemented Error\"));",
          "    });",
          "  }",
          "  ",
          "  protected async put(data: Input[]): Promise<{[Identifier: string]: HierarchicalDataTable}> {",
          "    return new Promise(async (resolve, reject) => {",
          "      /* try {",
          "        resolve(await DatabaseHelper.insert(@{",
          "            'collection.column': 'abc',",
          "            'collection.column': 123,",
          "            'collection.collection.column': null",
          "          }, 'collection',",
          "          false,                  // recusive upsert in sub-collection",
          "          this.request.session,   // session variables",
          "          false                   // skip permission settings",
          "        ));",
          "      } catch(error) {",
          "        reject(error);",
          "      } */",
          "      /* try {",
          "        resolve(await DatabaseHelper.upsert(@{",
          "            'collection.column': 'abc',",
          "            'collection.column': 123,",
          "            'collection.collection.column': null",
          "          }, 'collection',",
          "          this.request.session,   // session variables",
          "          false                   // skip permission settings",
          "        ));",
          "      } catch(error) {",
          "        reject(error);",
          "      } */",
          "      reject(new Error(\"Not Implemented Error\"));",
          "    });",
          "  }",
          "  ",
          "  protected async delete(data: Input[]): Promise<{[Identifier: string]: HierarchicalDataTable}> {",
          "    return new Promise(async (resolve, reject) => {",
          "      /* try {",
          "        resolve(await DatabaseHelper.delete(@{",
          "            'collection.column': 'abc',",
          "            'collection.column': 123,",
          "            'collection.collection.column': null",
          "          }, 'collection',",
          "          this.request.session,   // session variables",
          "          false                   // leavePermission",
          "        ));",
          "      } catch(error) {",
          "        reject(error);",
          "      } */",
          "      reject(new Error(\"Not Implemented Error\"));",
          "    });",
          "  }",
          "  ",
          "  // ---------------------------------------------------------------",
          "  // StackBlend Button Request Actions",
          "  // ---------------------------------------------------------------",
          "  ",
          "  protected async insert(data: Input[], schema: DataTableSchema): Promise<HierarchicalDataRow[]> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        const options = RequestHelper.getOptions(this.pageId, this.request); /* submit options */",
          "        const name = options.name;                                           /* button name */",
          "        ",
          "        // You may generate data and schema on the fly using:",
          "        //",
          "        // data = RequestHelper.createInputs({...});",
          "        // schema = SchemaHelper.getDataTableSchemaFromNotation('collection');",
          "        // ",
          "        ",
          "        resolve(await DatabaseHelper.insert(data, schema, options.crossRelationUpsert, this.request.session));",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  protected async update(data: Input[], schema: DataTableSchema): Promise<HierarchicalDataRow[]> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        const options = RequestHelper.getOptions(this.pageId, this.request); /* submit options */",
          "        const name = options.name;                                           /* button name */",
          "        ",
          "        // You may generate data and schema on the fly using:",
          "        //",
          "        // data = RequestHelper.createInputs({...});",
          "        // schema = SchemaHelper.getDataTableSchemaFromNotation('collection');",
          "        // ",
          "        ",
          "        resolve(await DatabaseHelper.update(data, schema, options.crossRelationUpsert, this.request.session));",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  protected async upsert(data: Input[], schema: DataTableSchema): Promise<HierarchicalDataRow[]> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        const options = RequestHelper.getOptions(this.pageId, this.request); /* submit options */",
          "        const name = options.name;                                           /* button name */",
          "        ",
          "        // You may generate data and schema on the fly using:",
          "        //",
          "        // data = RequestHelper.createInputs({...});",
          "        // schema = SchemaHelper.getDataTableSchemaFromNotation('collection');",
          "        // ",
          "        ",
          "        resolve(await DatabaseHelper.upsert(data, schema, this.request.session));",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  protected async remove(data: Input[], schema: DataTableSchema): Promise<HierarchicalDataRow[]> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        const options = RequestHelper.getOptions(this.pageId, this.request); /* submit options */",
          "        const name = options.name;                                           /* button name */",
          "        ",
          "        // You may generate data and schema on the fly using:",
          "        //",
          "        // data = RequestHelper.createInputs({...});",
          "        // schema = SchemaHelper.getDataTableSchemaFromNotation('collection');",
          "        // ",
          "        ",
          "        resolve(await DatabaseHelper.delete(data, schema, this.request.session));",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  protected async retrieve(data: Input[], schema: DataTableSchema): Promise<{[Identifier: string]: HierarchicalDataTable}> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        const options = RequestHelper.getOptions(this.pageId, this.request); /* submit options */",
          "        const name = options.name;                                           /* button name */",
          "        ",
          "        // You may generate data and schema on the fly using:",
          "        //",
          "        // data = RequestHelper.createInputs({...});",
          "        // schema = SchemaHelper.getDataTableSchemaFromNotation('collection');",
          "        // ",
          "        ",
          "        resolve(await DatabaseHelper.retrieve(data, schema, this.request.session, options.enabledRealTimeUpdate));",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          "  ",
          "  protected async navigate(data: Input[], schema: DataTableSchema): Promise<string> {",
          "    return new Promise(async (resolve, reject) => {",
          "      try {",
          "        const options = RequestHelper.getOptions(this.pageId, this.request); /* submit options */",
          "        const name = options.name;                                           /* button name */",
          "        ",
          "        // You may generate data and schema on the fly using:",
          "        //",
          "        // data = RequestHelper.createInputs({...});",
          "        // schema = SchemaHelper.getDataTableSchemaFromNotation('collection');",
          "        // ",
          "        let email, password, confirmPassword;",
          "        ",
          "        switch (name) {",
          "          case 'signin':",
          "            email = data.filter(input => input.name == 'Email').value;",
          "            password = data.filter(input => input.name == 'Password').value;",
          "            ",
          "            const dataset = await DatabaseHelper.retrieve(@{",
          "                'User.email': email",
          "              }, 'User',",
          "              this.request.session,   // session variables",
          "              false,                  // real-time updates",
          "              false                   // skip permission settings",
          "            );",
          "            ",
          "            if (dataset['User'].rows.length == 0 ||",
          "              bcrypt.compareSync(password, dataset['User'].rows[0].columns['password'])) throw new Error('อีเมล์และรหัสผ่านไม่ตรงกันกับที่มีในระบบ');",
          "            ",
          "            this.request.session.uid = dataset['User'].rows[0].columns['id'];",
          "            this.request.session.save(() => {",
          "              resolve('/welcome');",
          "            });",
          "            break;",
          "          case 'signup':",
          "            email = data.filter(input => input.name == 'Email').value;",
          "            password = data.filter(input => input.name == 'Password').value;",
          "            confirmPassword = data.filter(input => input.name == 'Confirm Password').value;",
          "            ",
          "            if (password != confirmPassword) throw new Error('ต้องกรอกรหัสผ่านให้ตรงกัน');",
          "            ",
          "            const dataset = await DatabaseHelper.insert(@{",
          "                'User.email': email,",
          "                'User.password': bcrypt.hashSync(password, 10),",
          "                'User.createdAt': new Date(),",
          "                'User.updatedAt': new Date()",
          "              }, 'User',",
          "              false,                  // recusive upsert in sub-collection",
          "              this.request.session,   // session variables",
          "              false                   // skip permission settings",
          "            );",
          "            ",
          "            this.request.session.uid = dataset['User'].rows[0].columns['id'];",
          "            this.request.session.save(() => {",
          "              resolve('/welcome');",
          "            });",
          "            break;",
          "        }",
          "        ",
          "        resolve('/');",
          "      } catch(error) {",
          "        reject(error);",
          "      }",
          "    });",
          "  }",
          " \t",
          "  "
        ],
        "internal-fsb-data-code-declare": [
          "",
          "",
          "// Declare private static variables here:",
          "//",
          "",
          ""
        ],
        "internal-fsb-data-code-import": [
          "",
          "",
          "// Import additional modules here:",
          "//",
          "const bcrypt = require( 'bcrypt' );",
          "",
          ""
        ],
        "internal-fsb-data-code-interface": [
          "",
          "",
          "// Declare or extend interfaces here:",
          "//",
          "",
          ""
        ]
      },
      "head": {
        "fonts": {
          "Inter": true,
          "Prompt": true
        }
      },
      "id": "index",
      "name": "Home",
      "notations": {},
      "path": "/",
      "references": [],
      "state": "create"
    }
  },
  "stylesheets": {},
  "version": 1.3,
  "viewBlobSHADict": {
    "index": "7b1d23c498f76d2d16ed3eec75bb06fde65f5828#931942136"
  }
}